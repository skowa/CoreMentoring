@model Northwind.Web.Models.ProductEditModel

@{
    ViewData["Title"] = "Update";
}

<vc:breadcrumbs />

<div class="container">
    <h1>Update Product</h1>

    @using (Html.BeginForm())
    {
        @Html.HiddenFor(model => model.ProductId)

        <div class="form-group">
            @Html.LabelFor(model => model.ProductName)
            @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProductName)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId)
            @Html.DropDownListFor(model => model.CategoryId, new SelectList(ViewBag.Categories, "CategoryId", "CategoryName"), new { @class = "form-control" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SupplierId)
            @Html.DropDownListFor(model => model.SupplierId, new SelectList(ViewBag.Suppliers, "SupplierId", "CompanyName"), new { @class = "form-control" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UnitPrice)
            @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UnitPrice)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QuantityPerUnit)
            @Html.EditorFor(model => model.QuantityPerUnit, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.QuantityPerUnit)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UnitsInStock)
            @Html.EditorFor(model => model.UnitsInStock, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UnitsInStock)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UnitsOnOrder)
            @Html.EditorFor(model => model.UnitsOnOrder, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UnitsOnOrder)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReorderLevel)
            @Html.EditorFor(model => model.ReorderLevel, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ReorderLevel)
        </div>

        <div class="form-group">
            @Html.EditorFor(model => model.Discontinued)
            @Html.LabelFor(model => model.Discontinued)
            @Html.ValidationMessageFor(model => model.Discontinued)
        </div>

        <button type="submit" class="btn btn-light">Update Product</button>
    }

    <div class="separated-link">
        <a href="/products">Back to List</a>
    </div>
</div>
